{"name":"{nodetoo}","tagline":"Express + MVC = {nodetoo}","body":"Inspired by [Express mvc example](https://github.com/visionmedia/express/tree/master/examples/mvc), nodetoo is a MVC framework built on top of [Express](expressjs.com).\r\n\r\n## Installation\r\n\r\n    $ npm install -g nodetoo\r\n\r\n## Quick Start\r\n\r\nAssuming you have created a `project` with Express, please refer [here](http://expressjs.com/guide.html) for the guide.  \r\n\r\n- Create the `app/`\r\n\r\n```\r\n$ cd /project\r\n$ npm install nodetoo\r\n$ nodetoo\r\n``` \r\n\r\n- Bootstrap nodetoo:\r\n\r\n```js\r\nvar express = require('express');\r\nvar nodetoo = require('nodetoo');\r\nvar app = express();\r\n\r\n// bootstrap nodetoo\r\nnodetoo(app, __dirname + '/app');\r\n\r\napp.listen(3000);\r\n```\r\n\r\n- Start the server:\r\n\r\n```\r\n$ node app\r\n```\r\n\r\n## Project Structure\r\n\r\nnodetoo only work on the `app/` folder\r\n\r\n```js\r\napp/\r\n  controllers/\r\n    home/\r\n      index.js\r\n  models/\r\n      user.js\r\n  views/\r\n    home/\r\n      index.jade\r\n  routes.js\r\n```\r\n\r\n## Models\r\n\r\nEach js file under `models/` is a model, nodetoo will bootstrap all of them automatically. \r\n\r\n```\r\nmodels/\r\n  user.js\r\n  post.js\r\n  comment.js\r\n```\r\n\r\n## Controllers\r\n\r\nEach folder under `controllers/` is a controller, `index.js` represent the js file.  \r\nLet's take a look at the `controllers/home/index.js` file.\r\n\r\n```js\r\nexports.index = function(req, res) {\r\n  var user = req.session.user;\r\n  res.render('home/index', {user: user});\r\n};\r\n\r\nexports.about = function(req, res) {\r\n  res.render('home/about');\r\n};\r\n```\r\n\r\n## Actions\r\n\r\nAction is a controller method and represent as `[controller].[method]`.\r\n\r\n```\r\nhome.index\r\nhome.about\r\n```\r\n\r\n## Routes\r\n\r\nRoutes are defined in the `app/route.js` file\r\n\r\n```js\r\nmodule.exports = [\r\n// public routes  \r\n  { routes : [\r\n        ['/'                        ,'get'  ,'home.index']\r\n      , ['/login'                   ,'all'  ,'user.login']\r\n      , ['/logout'                  ,'get'  ,'user.logout']\r\n  ]}\r\n\r\n// user with any roles\r\n, { roles  : ['*'],\r\n    routes : [\r\n        ['/anyone'                  ,'get'  ,'anyone.index']\r\n  ]}\r\n\r\n// user with admin role only\r\n, { roles  : ['admin'],\r\n    routes : [\r\n        ['/admin'                    ,'get' ,'admin.index']\r\n  ]}\r\n]\r\n```\r\n\r\n## Authentication\r\n\r\nnodetoo take the 3rd argument as the authentication middleware.\r\n\r\n```js\r\nvar auth = function(roles) {\r\n  return function (req, res, next) {\r\n    var user = req.session.user;\r\n    if (user === undefined) {\r\n      res.status(401).render('401');\r\n    } \r\n    // asterisk skip authorization\r\n    else if (!_.contains(roles, '*') \r\n          && !_.intersection(user.roles, roles).length > 0) {\r\n      res.status(401).render('401');\r\n    } else next();\r\n  }\r\n}\r\n\r\nnodetoo(app, __dirname + '/app', auth);\r\n```\r\nBut how you write the authenticator, it is really up to you.\r\n\r\n## Viewing Examples\r\n\r\nClone the Express repo, then install the dev dependencies to install all the example / test suite deps:\r\n\r\n    $ git clone git://github.com/visionmedia/express.git --depth 1\r\n    $ cd express\r\n    $ npm install\r\n\r\nthen run whichever tests you want:\r\n\r\n    $ node examples/content-negotiation\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2009-2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"UA-38720726-1","note":"Don't delete this file! It's used internally to help with page regeneration."}